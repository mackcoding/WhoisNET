name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Restore dependencies
        run: dotnet restore src/WhoisNET/WhoisNET.sln
      - name: Run tests
        run: |
          dotnet test src/WhoisNET.Tests/WhoisNET.Tests.csproj --verbosity normal
          dotnet test src/WhoisNET.Client.Tests/WhoisNET.Client.Tests.csproj --verbosity normal

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Update .NET workloads
        run: dotnet workload update
      - name: Build and package
        shell: pwsh
        run: |
          dotnet publish src/WhoisNET/WhoisNET.csproj -c Release -o WhoisNET
          dotnet publish src/WhoisNET.Client/WhoisNET.Client.csproj -c Release -o WhoisNET.Client
          if ($IsLinux) {
            zip -r whoisnet-lib-linux-${{ github.ref_name }}.zip WhoisNET
            zip -r whoisnet-client-linux-${{ github.ref_name }}.zip WhoisNET.Client
          } else {
            Compress-Archive -Path WhoisNET/* -DestinationPath whoisnet-win-lib-${{ github.ref_name }}.zip
            Compress-Archive -Path WhoisNET.Client/* -DestinationPath whoisnet-win-client-${{ github.ref_name }}.zip
          }
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.os }}
          path: whoisnet-*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: packages-*/*.zip
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
