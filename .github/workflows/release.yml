name: Release

on: 
    workflow_run:
        workflows: ["Build Project"]
        types:
            - completed    

permissions:
  packages: write
  contents: write

jobs:
    release:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]
        steps:
        - uses: actions/checkout@v4
        - name: Create release
          uses: elgohr/Github-Release-Action@v5
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            title: Release ${{ github.ref_name }}
            tag: ${{ github.ref_name }}

        - name: Release Linux Library
          uses: actions/upload-release-asset@v5
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: $ {{ steps.create_release.outputs.upload_url }}
            asset_path: whoisnet-lib-linux-${{ github.ref_name }}.zip

        - name: Release Linux Client
          uses: actions/upload-release-asset@v5
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: $ {{ steps.create_release.outputs.upload_url }}
            asset_path: whoisnet-client-linux-${{ github.ref_name }}.zip

        - name: Release Windows Library
          uses: actions/upload-release-asset@v5
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: $ {{ steps.create_release.outputs.upload_url }}
            asset_path: whoisnet-win-lib-${{ github.ref_name }}.zip

        - name: Release Windows Client
          uses: actions/upload-release-asset@v5
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: $ {{ steps.create_release.outputs.upload_url }}
            asset_path: whoisnet-win-client-${{ github.ref_name }}.zip